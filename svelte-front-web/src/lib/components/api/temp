<script>
  import { functions, httpsCallable } from "$lib/firebase/app.js";
  import {
    getStorage,
    ref,
    uploadBytes,
    getDownloadURL,
  } from "firebase/storage";
  import {
    getAuth,
    GoogleAuthProvider,
    signInWithPopup,
    onAuthStateChanged,
  } from "firebase/auth";
  import { text } from "@sveltejs/kit";

  let user = null;
  let files;
  export let isSucceed = false;
  export let textLog = "";
  export let isBusy = false;

  // Firebase 함수 설정
  const annotateImage = httpsCallable(functions, "annotateImage");

  // Firebase 인증 상태 확인
  const auth = getAuth();
  const provider = new GoogleAuthProvider();
  onAuthStateChanged(auth, (currentUser) => {
    user = currentUser;
  });

  async function handleGoogleLogin() {
    isBusy = true;
    try {
      const result = await signInWithPopup(auth, provider);
      user = result.user;
    } catch (error) {
      console.error("Google Sign-In Error:", error);
    }
    isBusy = false;
  }

  async function handleImageUpload() {
    isBusy = true;
    if (user) {
      // 로그인 확인
      if (files && files.length > 0) {
        try {
          const file = files[0];
          const storage = getStorage();
          const storageRef = ref(storage, "images/" + file.name);
          await uploadBytes(storageRef, file);

          const result = await annotateImage({
            image_url: "images/" + file.name,
          });
          console.log("Entire text found:", result.data.result);
          textLog = result.data.result.replace(/\n/g, " ");
          const cutOffIndex = textLog.indexOf("이다.");
          if (cutOffIndex !== -1) {
            textLog = textLog.substring(
              0,
              cutOffIndex + "이다.".length
            );
            isSucceed = true;
          } else {
            console.log("Phrase not found.");
          }
        } catch (error) {
          console.error("Failed to upload image:", error);
        }
      } else {
        console.warn("No file selected");
      }
    } else {
      console.warn("You must be logged in to upload an image.");
    }
    isBusy = false;
  }
</script>

<input type="file" bind:files accept="image/*" on:change={handleImageUpload} />
<button on:click={handleGoogleLogin}>Sign in with Google</button>
{#if user}
  <p>Welcome, {user.displayName}!</p>
{:else}
  <p>Please sign in to continue.</p>
{/if}